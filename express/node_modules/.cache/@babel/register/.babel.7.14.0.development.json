{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/mymac/Documents/GitHub/CW2/express/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mymac/Documents/GitHub/CW2/express\",\"filename\":\"/Users/mymac/Documents/GitHub/CW2/express/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mymac/Documents/GitHub/CW2/express\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/mymac/Documents/GitHub/CW2/express/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mymac/Documents/GitHub/CW2/express",
      "filename": "/Users/mymac/Documents/GitHub/CW2/express/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/mymac/Documents/GitHub/CW2/express",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mymac/Documents/GitHub/CW2/express/src/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mymac/Documents/GitHub/CW2/express/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mymac/Documents/GitHub/CW2/express/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\n// import the express framework\nvar MongoClient = require('mongodb').MongoClient; // create app object\n\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json()); // parses the json object included in the request body\n\nvar url = 'mongodb+srv://usertest09:Middlesexuni@cluster0.bcxqd.mongodb.net/userwebbapp?retryWrites=true&w=majority'; // post route\n\napp.post('/hello', function (req, res) {\n  res.send(\"Hello \".concat(req.body.name));\n});\napp.get('/lessons', /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var client, db, lessons;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect(url, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 2:\n            client = _context.sent;\n            db = client.db('userwebbapp');\n            _context.next = 6;\n            return db.collection('lessons').find({}).toArray();\n\n          case 6:\n            lessons = _context.sent;\n            res.status(200).json(lessons);\n            client.close();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/orders', /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n    var client, db, orders;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return MongoClient.connect(url, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 2:\n            client = _context2.sent;\n            db = client.db('userwebbapp');\n            _context2.next = 6;\n            return db.collection('orders').find({}).toArray();\n\n          case 6:\n            orders = _context2.sent;\n            res.status(200).json(orders);\n            client.close();\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/orders', function (req, res) {\n  MongoClient.connect(url, {\n    useUnifiedTopology: true\n  }, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(\"userwebbapp\");\n    dbo.collection(\"orders\").insertOne({\n      id: req.body.id,\n      spaces: req.body.spaces,\n      name: req.body.name,\n      number: req.body.number\n    }, function (err) {\n      if (err) throw err;\n      res.sendStatus(200);\n      db.close();\n    });\n  });\n});\napp.put('/lessons/update-lesson', /*#__PURE__*/function () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n    var client, db, lesson;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return MongoClient.connect(url, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 2:\n            client = _context3.sent;\n            db = client.db('userwebbapp');\n            _context3.next = 6;\n            return db.collection('lessons').updateOne({\n              id: req.body.id\n            }, {\n              $set: req.body\n            });\n\n          case 6:\n            lesson = _context3.sent;\n            res.status(200).json(lesson);\n            client.close();\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // set server to listen\n\napp.listen(8000, function () {\n  console.log('Server is listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsInJlcXVpcmUiLCJhcHAiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybCIsInBvc3QiLCJyZXEiLCJyZXMiLCJzZW5kIiwiYm9keSIsIm5hbWUiLCJnZXQiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwiY2xpZW50IiwiZGIiLCJjb2xsZWN0aW9uIiwiZmluZCIsInRvQXJyYXkiLCJsZXNzb25zIiwic3RhdHVzIiwiY2xvc2UiLCJvcmRlcnMiLCJlcnIiLCJkYm8iLCJpbnNlcnRPbmUiLCJpZCIsInNwYWNlcyIsIm51bWJlciIsInNlbmRTdGF0dXMiLCJwdXQiLCJ1cGRhdGVPbmUiLCIkc2V0IiwibGVzc29uIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7QUFEQTtBQUdBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkQsV0FBckMsQyxDQUNBOzs7QUFDQSxJQUFNRSxHQUFHLEdBQUcsMEJBQVo7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVIsRSxDQUF5Qjs7QUFDekIsSUFBSUMsR0FBRyxHQUFDLDBHQUFSLEMsQ0FFQTs7QUFDQUosR0FBRyxDQUFDSyxJQUFKLENBQVMsUUFBVCxFQUFtQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLGlCQUFrQkYsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQTNCO0FBQ0gsQ0FGRDtBQUlBVixHQUFHLENBQUNXLEdBQUosQ0FBUSxVQUFSO0FBQUEsMkZBQW9CLGlCQUFPTCxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDS1QsV0FBVyxDQUFDYyxPQUFaLENBQW9CUixHQUFwQixFQUNqQjtBQUFF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QUNqQlIsR0FEaUIsRUFFbkI7QUFBRVMsY0FBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxjQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxhQUZtQixDQUZROztBQUFBO0FBRXZCQyxZQUFBQSxNQUZ1QjtBQUt2QkMsWUFBQUEsRUFMdUIsR0FLbEJELE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLGFBQVYsQ0FMa0I7QUFBQTtBQUFBLG1CQU1SQSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxTQUFkLEVBQXlCZSxTQUF6QixDQUNyQjtBQUFDTCxjQUFBQSxFQUFFLEVBQUVyQixHQUFHLENBQUNHLElBQUosQ0FBU2tCO0FBQWQsYUFEcUIsRUFFckI7QUFBQ00sY0FBQUEsSUFBSSxFQUFFM0IsR0FBRyxDQUFDRztBQUFYLGFBRnFCLENBTlE7O0FBQUE7QUFNdkJ5QixZQUFBQSxNQU51QjtBQVM3QjNCLFlBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JsQixJQUFoQixDQUFxQitCLE1BQXJCO0FBQ0FuQixZQUFBQSxNQUFNLENBQUNPLEtBQVA7O0FBVjZCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWpDOztBQUFBO0FBQUE7QUFBQTtBQUFBLEssQ0FZQTs7QUFDQXRCLEdBQUcsQ0FBQ21DLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQU07QUFDbkJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbXltYWMvRG9jdW1lbnRzL0dpdEh1Yi9DVzIvZXhwcmVzcy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHRoZSBleHByZXNzIGZyYW1ld29ya1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbnZhciBNb25nb0NsaWVudCA9IHJlcXVpcmUoJ21vbmdvZGInKS5Nb25nb0NsaWVudDtcbi8vIGNyZWF0ZSBhcHAgb2JqZWN0XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTsgLy8gcGFyc2VzIHRoZSBqc29uIG9iamVjdCBpbmNsdWRlZCBpbiB0aGUgcmVxdWVzdCBib2R5XG52YXIgdXJsPSdtb25nb2RiK3NydjovL3VzZXJ0ZXN0MDk6TWlkZGxlc2V4dW5pQGNsdXN0ZXIwLmJjeHFkLm1vbmdvZGIubmV0L3VzZXJ3ZWJiYXBwP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSc7XG5cbi8vIHBvc3Qgcm91dGVcbmFwcC5wb3N0KCcvaGVsbG8nLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc2VuZChgSGVsbG8gJHtyZXEuYm9keS5uYW1lfWApO1xufSlcblxuYXBwLmdldCgnL2xlc3NvbnMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KHVybCxcbiAgICAgICAgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9XG4gICAgKTtcbiAgICBjb25zdCBkYiA9IGNsaWVudC5kYigndXNlcndlYmJhcHAnKTtcbiAgICBjb25zdCBsZXNzb25zID0gYXdhaXQgZGIuY29sbGVjdGlvbignbGVzc29ucycpLmZpbmQoe30pLnRvQXJyYXkoKTsgIFxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGxlc3NvbnMpO1xuICAgIGNsaWVudC5jbG9zZSgpO1xufSk7XG5hcHAuZ2V0KCcvb3JkZXJzJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdChcbiAgICAgICAgdXJsLFxuICAgICAgICB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH1cbiAgICApO1xuICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKCd1c2Vyd2ViYmFwcCcpO1xuICAgIGNvbnN0IG9yZGVycyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ29yZGVycycpLmZpbmQoe30pLnRvQXJyYXkoKTsgIFxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKG9yZGVycyk7XG4gICAgY2xpZW50LmNsb3NlKCk7XG59KTthcHAucG9zdCgnL29yZGVycycsIChyZXEsIHJlcykgPT4ge1xuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLCB7IHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9LCBmdW5jdGlvbihlcnIsIGRiKSB7XG4gICAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgICAgdmFyIGRibyA9IGRiLmRiKFwidXNlcndlYmJhcHBcIik7XG4gICAgICAgIGRiby5jb2xsZWN0aW9uKFwib3JkZXJzXCIpLmluc2VydE9uZSh7XG4gICAgICAgICAgICBpZDogcmVxLmJvZHkuaWQsXG4gICAgICAgICAgICBzcGFjZXM6IHJlcS5ib2R5LnNwYWNlcyxcbiAgICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWUsXG4gICAgICAgICAgICBudW1iZXI6IHJlcS5ib2R5Lm51bWJlcixcbiAgICAgICAgfSwgXG4gICAgICAgIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKTtcbiAgICAgICAgICAgIGRiLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5hcHAucHV0KCcvbGVzc29ucy91cGRhdGUtbGVzc29uJyxhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICAvLyBpbml0aWF0ZSBEQiBjb25uZWN0aW9uXG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdChcbiAgICAgICAgdXJsLFxuICAgICAgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9ICApO1xuICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKCd1c2Vyd2ViYmFwcCcpO1xuICAgIGNvbnN0IGxlc3NvbiA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2xlc3NvbnMnKS51cGRhdGVPbmUoXG4gICAge2lkOiByZXEuYm9keS5pZCB9LCBcbiAgICB7JHNldDogcmVxLmJvZHl9KTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihsZXNzb24pO1xuICAgIGNsaWVudC5jbG9zZSgpO1xufSk7XG4vLyBzZXQgc2VydmVyIHRvIGxpc3RlblxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PsKge1xuICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXIgaXMgbGlzdGVuaW5nIG9uIHBvcnQgODAwMCcpO1xufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "MongoClient",
        "require",
        "app",
        "use",
        "express",
        "json",
        "url",
        "post",
        "req",
        "res",
        "send",
        "body",
        "name",
        "get",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "collection",
        "find",
        "toArray",
        "lessons",
        "status",
        "close",
        "orders",
        "err",
        "dbo",
        "insertOne",
        "id",
        "spaces",
        "number",
        "sendStatus",
        "put",
        "updateOne",
        "$set",
        "lesson",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/mymac/Documents/GitHub/CW2/express/src/",
      "sourcesContent": [
        "// import the express framework\nimport express from 'express';\n\nvar MongoClient = require('mongodb').MongoClient;\n// create app object\nconst app = express();\napp.use(express.json()); // parses the json object included in the request body\nvar url='mongodb+srv://usertest09:Middlesexuni@cluster0.bcxqd.mongodb.net/userwebbapp?retryWrites=true&w=majority';\n\n// post route\napp.post('/hello', (req, res) => {\n    res.send(`Hello ${req.body.name}`);\n})\n\napp.get('/lessons', async (req, res) => {\n    const client = await MongoClient.connect(url,\n        { useNewUrlParser: true, useUnifiedTopology: true }\n    );\n    const db = client.db('userwebbapp');\n    const lessons = await db.collection('lessons').find({}).toArray();  \n    res.status(200).json(lessons);\n    client.close();\n});\napp.get('/orders', async (req, res) => {\n    const client = await MongoClient.connect(\n        url,\n        { useNewUrlParser: true, useUnifiedTopology: true }\n    );\n    const db = client.db('userwebbapp');\n    const orders = await db.collection('orders').find({}).toArray();  \n    res.status(200).json(orders);\n    client.close();\n});app.post('/orders', (req, res) => {\n    MongoClient.connect(url, { useUnifiedTopology: true }, function(err, db) {\n        if (err) throw err;\n        var dbo = db.db(\"userwebbapp\");\n        dbo.collection(\"orders\").insertOne({\n            id: req.body.id,\n            spaces: req.body.spaces,\n            name: req.body.name,\n            number: req.body.number,\n        }, \n        function(err) {\n            if (err) throw err;\n            res.sendStatus(200);\n            db.close();\n        });\n    });\n});\napp.put('/lessons/update-lesson',async (req, res) => {\n    // initiate DB connection\n    const client = await MongoClient.connect(\n        url,\n      { useNewUrlParser: true, useUnifiedTopology: true }  );\n    const db = client.db('userwebbapp');\n    const lesson = await db.collection('lessons').updateOne(\n    {id: req.body.id }, \n    {$set: req.body});\n    res.status(200).json(lesson);\n    client.close();\n});\n// set server to listen\napp.listen(8000, () => {\n    console.log('Server is listening on port 8000');\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1620720317333
  }
}